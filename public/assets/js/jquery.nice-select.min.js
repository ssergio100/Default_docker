/ * jQuery Nice Select - v1.1.0
    https://github.com/hernansartorio/jquery-nice-select
    Feito por Hernán Sartorio * /
 
(function ($) {

  $ .fn.niceSelect = função (método) {
    
    // Métodos
    if (typeof method == 'string') {      
      if (método == 'atualização') {
        this.each (function () {
          var $ select = $ (isto);
          var $ dropdown = $ (this) .next ('. nice-select');
          var open = $ dropdown.hasClass ('aberto');
          
          if ($ dropdown.length) {
            $ dropdown.remove ();
            create_nice_select ($ select);
            
            se (aberto) {
              $ select.next (). trigger ('clique');
            }
          }
        });
      } senão se (método == 'destruir') {
        this.each (function () {
          var $ select = $ (isto);
          var $ dropdown = $ (this) .next ('. nice-select');
          
          if ($ dropdown.length) {
            $ dropdown.remove ();
            $ select.css ('exibição', '');
          }
        });
        if ($ ('. nice-select'). length == 0) {
          $ (documento) .off ('. nice_select');
        }
      } outro {
        console.log ('Método "' + método + '" não existe.')
      }
      devolva isso;
    }
      
    // Ocultar seleção nativa
    this.hide ();
    
    // Criar marcação personalizada
    this.each (function () {
      var $ select = $ (isto);
      
      if (! $ select.next (). hasClass ('seleção agradável')) {
        create_nice_select ($ select);
      }
    });
    
    função create_nice_select ($ select) {
      $ select.after ($ ('<div> </div>')
        .addClass ('seleção agradável')
        .addClass ($ select.attr ('classe') || '')
        .addClass ($ select.attr ('disabled')? 'disabled': '')
        .attr ('tabindex', $ select.attr ('desativado')? null: '0')
        .html ('<span class = "current"> </span> <ul class = "list"> </ul>')
      );
        
      var $ dropdown = $ select.next ();
      var $ options = $ select.find ('opção');
      var $ selected = $ select.find ('opção: selecionada');
      
      $ dropdown.find ('. current'). html ($ selected.data ('display') || $ selected.text ());
      
      $ options.each (function (i) {
        var $ opção = $ (isto);
        var display = $ option.data ('display');

        $ dropdown.find ('ul'). append ($ ('<li> </li>')
          .attr ('valor do dado', $ option.val ())
          .attr ('exibição de dados', (exibição || nula))
          .addClass ('opção' +
            ($ option.is (': selected')? 'selected': '') +
            ($ option.is (': disabled')? 'disabled': ''))
          .html ($ option.text ())
        );
      });
    }
    
    / * Ouvintes de eventos * /
    
    // Desvincule eventos existentes caso o plug-in tenha sido inicializado antes
    $ (documento) .off ('. nice_select');
    
    // Abrir fechar
    $ (document) .on ('click.nice_select', '.nice-select', função (evento) {
      var $ dropdown = $ (isso);
      
      $ ('. nice-select'). not ($ dropdown) .removeClass ('aberto');
      $ dropdown.toggleClass ('aberto');
      
      if ($ dropdown.hasClass ('open')) {
        $ dropdown.find ('. opção');  
        $ dropdown.find ('. focus'). removeClass ('focus');
        $ dropdown.find ('. selected'). addClass ('focus');
      } outro {
        $ dropdown.focus ();
      }
    });
    
    // Fechar ao clicar fora
    $ (document) .on ('click.nice_select', função (evento) {
      if ($ (event.target) .closest ('. nice-select'). length === 0) {
        $ ('. nice-select'). removeClass ('open'). find ('. option');  
      }
    });
    
    // Opção clique
    $ (document) .on ('click.nice_select', '.nice-select .option: not (.disabled)', função (evento) {
      var $ opção = $ (isto);
      var $ dropdown = $ option.closest ('. nice-select');
      
      $ dropdown.find ('. selected'). removeClass ('selected');
      $ option.addClass ('selecionado');
      
      var texto = $ option.data ('display') || $ option.text ();
      $ dropdown.find ('. current'). texto (texto);
      
      $ dropdown.prev ('select'). val ($ option.data ('value')). trigger ('alteração');
    });

    // Eventos do teclado
    $ (document) .on ('keydown.nice_select', '.nice-select', função (evento) {    
      var $ dropdown = $ (isso);
      var $ focus_option = $ ($ dropdown.find ('. focus') || $ dropdown.find ('. list .option.selected'));
      
      // Espaço ou Enter
      if (event.keyCode == 32 || event.keyCode == 13) {
        if ($ dropdown.hasClass ('open')) {
          $ focus_option.trigger ('clique');
        } outro {
          $ dropdown.trigger ('clique');
        }
        retorna falso;
      // Baixa
      } senão se (event.keyCode == 40) {
        if (! $ dropdown.hasClass ('open')) {
          $ dropdown.trigger ('clique');
        } outro {
          var $ next = $ focus_option.nextAll ('. opção: não (. desativada)'). first ();
          if ($ next.length> 0) {
            $ dropdown.find ('. focus'). removeClass ('focus');
            $ next.addClass ('foco');
          }
        }
        retorna falso;
      // Acima
      } senão se (event.keyCode == 38) {
        if (! $ dropdown.hasClass ('open')) {
          $ dropdown.trigger ('clique');
        } outro {
          var $ prev = $ focus_option.prevAll ('. opção: não (. desativada)'). first ();
          if ($ prev.length> 0) {
            $ dropdown.find ('. focus'). removeClass ('focus');
            $ prev.addClass ('foco');
          }
        }
        retorna falso;
      // Esc
      } senão se (event.keyCode == 27) {
        if ($ dropdown.hasClass ('open')) {
          $ dropdown.trigger ('clique');
        }
      // Aba
      } senão se (event.keyCode == 9) {
        if ($ dropdown.hasClass ('open')) {
          retorna falso;
        }
      }
    });

    // Detecta suporte a eventos de ponteiro CSS, para IE <= 10. No Modernizr.
    var style = document.createElement ('a'). style;
    style.cssText = 'eventos-ponteiro: automático';
    if (style.pointerEvents! == 'auto') {
      $ ('html'). addClass ('no-csspointerevents');
    }
    
    devolva isso;

  };

} (jQuery));